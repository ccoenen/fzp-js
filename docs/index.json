[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/fzp/bus.js",
    "content": "'use strict';\n\n/**\n * FZP Bus class\n */\nclass FZPBus {\n  /**\n   * FZPBus constructor\n   * @param {Object} opt\n   */\n  constructor(opt) {\n    opt = opt || {};\n\n    /**\n     * Store the FZP bus id\n     * @type {String}\n     */\n    this.id = opt.id || null;\n\n    /**\n     * Store the FZP node members as an array\n     * @type {Array}\n     */\n    this.nodeMembers = opt.nodeMembers || [];\n  }\n\n  /**\n   * Set the FZP bus id\n   * @param {String} id\n   * @return {FZPBus}\n   */\n  setid(id) {\n    this.id = id;\n    return this;\n  }\n\n  /**\n   * add a new node member if not exist\n   * @param {String} m\n   * @return {FZPBus}\n   */\n  setModeMember(m) {\n    if (!this.existModeMember(m)) {\n      this.nodeMembers.push(m);\n    }\n    return this;\n  }\n\n  /**\n   * check if the given node member name does not exist at the nodeMembers array\n   * @param {String} m\n   * @return {Boolean}\n   */\n  existModeMember(m) {\n    for (let i = 0; i < this.nodeMembers.length; i++) {\n      if (this.nodeMembers[i] === m) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nmodule.exports = FZPBus;\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/src/fzp/bus.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "FZPBus",
    "memberof": "src/fzp/bus.js",
    "static": true,
    "longname": "src/fzp/bus.js~FZPBus",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/bus.js",
    "importStyle": null,
    "description": "FZP Bus class",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fzp/bus.js~FZPBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/bus.js~FZPBus#constructor",
    "access": "public",
    "description": "FZPBus constructor",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opt",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "id",
    "memberof": "src/fzp/bus.js~FZPBus",
    "static": false,
    "longname": "src/fzp/bus.js~FZPBus#id",
    "access": "public",
    "description": "Store the FZP bus id",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "nodeMembers",
    "memberof": "src/fzp/bus.js~FZPBus",
    "static": false,
    "longname": "src/fzp/bus.js~FZPBus#nodeMembers",
    "access": "public",
    "description": "Store the FZP node members as an array",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "setid",
    "memberof": "src/fzp/bus.js~FZPBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/bus.js~FZPBus#setid",
    "access": "public",
    "description": "Set the FZP bus id",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZPBus"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "setModeMember",
    "memberof": "src/fzp/bus.js~FZPBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/bus.js~FZPBus#setModeMember",
    "access": "public",
    "description": "add a new node member if not exist",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZPBus"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "existModeMember",
    "memberof": "src/fzp/bus.js~FZPBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/bus.js~FZPBus#existModeMember",
    "access": "public",
    "description": "check if the given node member name does not exist at the nodeMembers array",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/fzp/connector-view.js",
    "content": "'use strict';\n\n/**\n * FZPConnectorView class\n */\nclass FZPConnectorView {\n  /**\n   * FZPConnectorView constructor\n   * @param {Object} opt\n   */\n  constructor(opt) {\n    opt = opt || {};\n\n    /**\n     * the FZP connector view layer\n     * @type {String}\n     */\n    this.layer = opt.layer || null;\n\n    /**\n     * the FZP connector view svg\n     * @type {String}\n     */\n    this.svgId = opt.svgId || null;\n\n    /**\n     * the FZP connector view leg\n     * @type {String}\n     */\n    this.legId = opt.legId || null;\n\n    /**\n     * the FZP connector view terminal\n     * @type {String}\n     */\n    this.terminalId = opt.terminalId || null;\n  }\n}\n\nmodule.exports = FZPConnectorView;\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/src/fzp/connector-view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "FZPConnectorView",
    "memberof": "src/fzp/connector-view.js",
    "static": true,
    "longname": "src/fzp/connector-view.js~FZPConnectorView",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/connector-view.js",
    "importStyle": null,
    "description": "FZPConnectorView class",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fzp/connector-view.js~FZPConnectorView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/connector-view.js~FZPConnectorView#constructor",
    "access": "public",
    "description": "FZPConnectorView constructor",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opt",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "layer",
    "memberof": "src/fzp/connector-view.js~FZPConnectorView",
    "static": false,
    "longname": "src/fzp/connector-view.js~FZPConnectorView#layer",
    "access": "public",
    "description": "the FZP connector view layer",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "svgId",
    "memberof": "src/fzp/connector-view.js~FZPConnectorView",
    "static": false,
    "longname": "src/fzp/connector-view.js~FZPConnectorView#svgId",
    "access": "public",
    "description": "the FZP connector view svg",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "legId",
    "memberof": "src/fzp/connector-view.js~FZPConnectorView",
    "static": false,
    "longname": "src/fzp/connector-view.js~FZPConnectorView#legId",
    "access": "public",
    "description": "the FZP connector view leg",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "terminalId",
    "memberof": "src/fzp/connector-view.js~FZPConnectorView",
    "static": false,
    "longname": "src/fzp/connector-view.js~FZPConnectorView#terminalId",
    "access": "public",
    "description": "the FZP connector view terminal",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/fzp/connector.js",
    "content": "'use strict';\n\nconst FZPConnectorView = require('./connector-view');\n\n/**\n * FZPConnector class\n */\nclass FZPConnector {\n  /**\n   * FZPConnector constructor\n   * @param {Object} opt - the options\n   */\n  constructor(opt) {\n    opt = opt || {views: {pcb: {}}};\n\n    /**\n     * The id of the FZP connector.\n     * @type {String}\n     */\n    this.id = opt.id || null;\n\n    /**\n     * The name of the FZP connector.\n     * @type {String}\n     */\n    this.name = opt.name || null;\n\n    /**\n     * The type of the FZP connector\n     * @type {String}\n     */\n    this.type = opt.type || null;\n\n    /**\n     * The description of the FZP connector\n     * @type {String}\n     */\n    this.description = opt.description || null;\n\n    /**\n     * The FZP connector views for breadboard, schematic and pcb.\n     * Note that the pcb view has an object for copper0, copper1 etc.\n     */\n    this.views = {\n      breadboard: new FZPConnectorView(opt.views.breadboard),\n      schematic: new FZPConnectorView(opt.views.schematic),\n      pcb: {\n        copper0: new FZPConnectorView(opt.views.pcb.copper0),\n        copper1: new FZPConnectorView(opt.views.pcb.copper1),\n      },\n    };\n  }\n}\n\nmodule.exports = FZPConnector;\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/src/fzp/connector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "FZPConnectorView",
    "memberof": "src/fzp/connector.js",
    "static": true,
    "longname": "src/fzp/connector.js~FZPConnectorView",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/connector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "class",
    "name": "FZPConnector",
    "memberof": "src/fzp/connector.js",
    "static": true,
    "longname": "src/fzp/connector.js~FZPConnector",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/connector.js",
    "importStyle": null,
    "description": "FZPConnector class",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 67,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fzp/connector.js~FZPConnector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/connector.js~FZPConnector#constructor",
    "access": "public",
    "description": "FZPConnector constructor",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opt",
        "description": "the options"
      }
    ]
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "id",
    "memberof": "src/fzp/connector.js~FZPConnector",
    "static": false,
    "longname": "src/fzp/connector.js~FZPConnector#id",
    "access": "public",
    "description": "The id of the FZP connector.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "name",
    "memberof": "src/fzp/connector.js~FZPConnector",
    "static": false,
    "longname": "src/fzp/connector.js~FZPConnector#name",
    "access": "public",
    "description": "The name of the FZP connector.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "type",
    "memberof": "src/fzp/connector.js~FZPConnector",
    "static": false,
    "longname": "src/fzp/connector.js~FZPConnector#type",
    "access": "public",
    "description": "The type of the FZP connector",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "description",
    "memberof": "src/fzp/connector.js~FZPConnector",
    "static": false,
    "longname": "src/fzp/connector.js~FZPConnector#description",
    "access": "public",
    "description": "The description of the FZP connector",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "views",
    "memberof": "src/fzp/connector.js~FZPConnector",
    "static": false,
    "longname": "src/fzp/connector.js~FZPConnector#views",
    "access": "public",
    "description": "The FZP connector views for breadboard, schematic and pcb.\nNote that the pcb view has an object for copper0, copper1 etc.",
    "lineNumber": 44,
    "type": {
      "types": [
        "{\"breadboard\": *, \"schematic\": *, \"pcb\": *}"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/fzp/fzp.js",
    "content": "'use strict';\n\nconst FZPView = require('./view');\nconst FZPProperty = require('./property');\n\n/**\n * The FZP class\n */\nclass FZP {\n  /**\n   * FZP constructor\n   * @param {Object} opt\n   */\n  constructor(opt) {\n    opt = opt || {};\n\n    /**\n     * the module id\n     * @type {String}\n     */\n    this.moduleId = opt.module || '';\n\n    /**\n     * the fritzing version\n     * @type {String}\n     */\n    this.fritzingVersion = opt.fritzingVersion || '';\n\n    /**\n     * the FZP version\n     * @type {String}\n     */\n    this.version = opt.version || '0.0.0';\n\n    /**\n     * the FZP title\n     * @type {String}\n     */\n    this.title = opt.title || '';\n\n    /**\n     * the description\n     * @type {String}\n     */\n    this.description = opt.description || '';\n\n    /**\n     * the author\n     * @type {String}\n     */\n    this.author = opt.author || '';\n\n    /**\n     * the date\n     * @type {String}\n     */\n    this.date = opt.date || '';\n\n    /**\n     * the url\n     * @type {String}\n     */\n    this.url = opt.url || '';\n\n    /**\n     * the label\n     * @type {String}\n     */\n    this.label = opt.label || '';\n\n    /**\n     * the tags\n     * @type {Array}\n     */\n    this.tags = opt.tags || [];\n\n    /**\n     * the taxonomy\n     * @type {String}\n     */\n    this.taxonomy = opt.taxonomy || '';\n\n    /**\n     * the language\n     * @type {String}\n     */\n    this.language = opt.language || '';\n\n    /**\n     * the family\n     * @type {String}\n     */\n    this.family = opt.family || '';\n\n    /**\n     * the variant\n     * @type {String}\n     */\n    this.variant = opt.variant || '';\n\n    /**\n     * the properties\n     * @type {Object}\n     */\n    this.properties = opt.properties || {};\n\n    /**\n     * the four views (icon, breadboard, schematic, pcb)\n     * @type {Object}\n     */\n    this.views = {\n      icon: new FZPView(),\n      schematic: new FZPView(),\n      breadboard: new FZPView(),\n      pcb: new FZPView(),\n    };\n\n    /**\n     * the connectors\n     * @type {Object}\n     */\n    this.connectors = opt.connectors || {};\n    /**\n     * the buses\n     * A bus is a instance of the Bus class\n     * @type {Object}\n     */\n    this.buses = opt.buses || {};\n  }\n\n  /**\n   * Get the total number of tags.\n   * @return {Number}\n   */\n  totalTags() {\n    return this.tags.length;\n  }\n\n  /**\n   * setTag\n   * @param {String} tag\n   * @return {FZP}\n   */\n  setTag(tag) {\n    this.tags.push(tag);\n    return this;\n  }\n\n  /**\n   * Create or update a FZPProperty instance to the FZP.\n   * @param {String} name\n   * @param {String} value\n   * @param {String} showInLabel\n   * @return {FZP}\n   */\n  setProperty(name, value, showInLabel) {\n    this.properties[name] = new FZPProperty(value, showInLabel);\n    return this;\n  }\n\n  /**\n   * Get a FZP property by the given name.\n   * @param {String} name\n   * @return {FZPProperty}\n   */\n  getProperty(name) {\n    return this.properties[name];\n  }\n\n  /**\n   * setView\n   * @param {String} name\n   * @param {FZPView} view\n   * @return {FZP}\n   */\n  setView(name, view) {\n    console.log('not jet implemented');\n    return this;\n  }\n\n  /**\n   * setConnector\n   * @param {String} name\n   * @param {FZPConnector} connector\n   * @return {FZP}\n   */\n  setConnector(name, connector) {\n    console.log('not jet implemented');\n    return this;\n  }\n\n  /**\n   * setBus\n   * @param {String} name\n   * @param {FZPBus} bus\n   * @return {FZP}\n   */\n  setBus(name, bus) {\n    console.log('not jet implemented');\n    return this;\n  }\n\n  /**\n   * Load all SVG sources.\n   * @param {String} baseurl\n   * @return {Promise}\n   */\n  loadSVGs(baseurl) {\n    return this.views.breadboard.loadSVG(baseurl)\n    .then((d) => {\n      return this.views.schematic.loadSVG(baseurl)\n      .then((d) => {\n        return this.views.pcb.loadSVG(baseurl)\n        .then((d) => {\n          return d;\n        });\n      });\n    });\n  }\n}\n\nmodule.exports = FZP;\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/src/fzp/fzp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "FZPView",
    "memberof": "src/fzp/fzp.js",
    "static": true,
    "longname": "src/fzp/fzp.js~FZPView",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/fzp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "FZPProperty",
    "memberof": "src/fzp/fzp.js",
    "static": true,
    "longname": "src/fzp/fzp.js~FZPProperty",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/fzp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "class",
    "name": "FZP",
    "memberof": "src/fzp/fzp.js",
    "static": true,
    "longname": "src/fzp/fzp.js~FZP",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/fzp.js",
    "importStyle": null,
    "description": "The FZP class",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 77,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#constructor",
    "access": "public",
    "description": "FZP constructor",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opt",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "moduleId",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#moduleId",
    "access": "public",
    "description": "the module id",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "fritzingVersion",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#fritzingVersion",
    "access": "public",
    "description": "the fritzing version",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "version",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#version",
    "access": "public",
    "description": "the FZP version",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "title",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#title",
    "access": "public",
    "description": "the FZP title",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "description",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#description",
    "access": "public",
    "description": "the description",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "author",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#author",
    "access": "public",
    "description": "the author",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "date",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#date",
    "access": "public",
    "description": "the date",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "url",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#url",
    "access": "public",
    "description": "the url",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "label",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#label",
    "access": "public",
    "description": "the label",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "tags",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#tags",
    "access": "public",
    "description": "the tags",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "taxonomy",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#taxonomy",
    "access": "public",
    "description": "the taxonomy",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "language",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#language",
    "access": "public",
    "description": "the language",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "family",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#family",
    "access": "public",
    "description": "the family",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "variant",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#variant",
    "access": "public",
    "description": "the variant",
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "properties",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#properties",
    "access": "public",
    "description": "the properties",
    "lineNumber": 105,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "views",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#views",
    "access": "public",
    "description": "the four views (icon, breadboard, schematic, pcb)",
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "connectors",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#connectors",
    "access": "public",
    "description": "the connectors",
    "lineNumber": 122,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "buses",
    "memberof": "src/fzp/fzp.js~FZP",
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#buses",
    "access": "public",
    "description": "the buses\nA bus is a instance of the Bus class",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "totalTags",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#totalTags",
    "access": "public",
    "description": "Get the total number of tags.",
    "lineNumber": 135,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "setTag",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#setTag",
    "access": "public",
    "description": "setTag",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "tag",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZP"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "setProperty",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#setProperty",
    "access": "public",
    "description": "Create or update a FZPProperty instance to the FZP.",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "showInLabel",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZP"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "getProperty",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#getProperty",
    "access": "public",
    "description": "Get a FZP property by the given name.",
    "lineNumber": 166,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZPProperty"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "setView",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#setView",
    "access": "public",
    "description": "setView",
    "lineNumber": 176,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "FZPView"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZP"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "setConnector",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#setConnector",
    "access": "public",
    "description": "setConnector",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "FZPConnector"
        ],
        "spread": false,
        "optional": false,
        "name": "connector",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZP"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "setBus",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#setBus",
    "access": "public",
    "description": "setBus",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "FZPBus"
        ],
        "spread": false,
        "optional": false,
        "name": "bus",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZP"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "loadSVGs",
    "memberof": "src/fzp/fzp.js~FZP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/fzp.js~FZP#loadSVGs",
    "access": "public",
    "description": "Load all SVG sources.",
    "lineNumber": 208,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "baseurl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/fzp/property.js",
    "content": "'use strict';\n\n/**\n * FZPProperty class\n */\nclass FZPProperty {\n  /**\n   * FZPProperty constructor\n   * @param {String} value\n   * @param {String} showInLabel\n   */\n  constructor(value, showInLabel) {\n    /**\n     * the property value\n     * @type {String}\n     */\n    this.value = value || null;\n\n    /**\n     * the property showInLabel\n     * @type {Boolean}\n     */\n    this.showInLabel = showInLabel || false;\n  }\n}\n\nmodule.exports = FZPProperty;\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/src/fzp/property.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "class",
    "name": "FZPProperty",
    "memberof": "src/fzp/property.js",
    "static": true,
    "longname": "src/fzp/property.js~FZPProperty",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/property.js",
    "importStyle": null,
    "description": "FZPProperty class",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 106,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fzp/property.js~FZPProperty",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/property.js~FZPProperty#constructor",
    "access": "public",
    "description": "FZPProperty constructor",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "showInLabel",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "value",
    "memberof": "src/fzp/property.js~FZPProperty",
    "static": false,
    "longname": "src/fzp/property.js~FZPProperty#value",
    "access": "public",
    "description": "the property value",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "showInLabel",
    "memberof": "src/fzp/property.js~FZPProperty",
    "static": false,
    "longname": "src/fzp/property.js~FZPProperty#showInLabel",
    "access": "public",
    "description": "the property showInLabel",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/fzp/view.js",
    "content": "'use strict';\n\nconst axios = require('axios');\n\n/**\n * FZPView class is used by the fzp breadboard, pcb and schematics view.\n */\nclass FZPView {\n  /**\n   * FZPView constructor\n   * @param {String} image\n   * @param {Array} ids\n   * @param {Boolean} flipH\n   * @param {Boolean} flipV\n   */\n  constructor(image, ids, flipH, flipV) {\n    /**\n     * The FZPView image\n     * @type {String}\n     */\n    this.image = image || null;\n\n    /**\n     * The FZPView layer id's\n     * @type {Array}\n     */\n    this.layerIds = ids || [];\n\n    /**\n     * FZPView flip horizontal\n     * @type {Boolean}\n     */\n    this.flipHorizontal = flipH || false;\n\n    /**\n     * FZPView flip vertical\n     * @type {Boolean}\n     */\n    this.flipVertical = flipV || false;\n\n    /**\n     * The FZPView svg data\n     * @type {String}\n     */\n    this.svg = null;\n  }\n\n  /**\n   * Set the FZPView image source\n   * @param {String} src The image source\n   * @return {FZPView}\n   */\n  setImage(src) {\n    this.image = src;\n    return this;\n  }\n\n  /**\n   * Get the total number of FZPView layer id's\n   * @return {Number}\n   */\n  totalLayerId() {\n    return this.layerIds.length;\n  }\n\n  /**\n   * Add a layer id to the FZPView\n   * @param {String} name The layer name\n   * @return {FZPView}\n   */\n  setLayerId(name) {\n    if (!this.existLayerId(name)) {\n      this.layerIds.push(name);\n    }\n    return this;\n  }\n\n  /**\n   * Check if a layer id exist at the FZPView layerIds array\n   * @param {String} id\n   * @return {Boolean}\n   */\n  existLayerId(id) {\n    for (let i = 0; i < this.layerIds.length; i++) {\n      if (this.layerIds[i] === id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the svg data\n   * @param {String} data The SVG data\n   * @return {FZPView}\n   */\n  setSVG(data) {\n    this.svg = data;\n    return this;\n  }\n\n  /**\n   * load the svg of the image path from the fritzing-parts api\n   * @param {String} baseurl the url to the fritzing-parts/core directory\n   * @return {Promise}\n   */\n  loadSVG(baseurl) {\n    let self = this;\n    return axios.get(baseurl+this.image, {responseType: 'xml'})\n    .then((res) => {\n      self.setSVG(res.data);\n      return res.data;\n    });\n  }\n}\n\nmodule.exports = FZPView;\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/src/fzp/view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "axios",
    "memberof": "src/fzp/view.js",
    "static": true,
    "longname": "src/fzp/view.js~axios",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/view.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "class",
    "name": "FZPView",
    "memberof": "src/fzp/view.js",
    "static": true,
    "longname": "src/fzp/view.js~FZPView",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/fzp/view.js",
    "importStyle": null,
    "description": "FZPView class is used by the fzp breadboard, pcb and schematics view.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 112,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fzp/view.js~FZPView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/view.js~FZPView#constructor",
    "access": "public",
    "description": "FZPView constructor",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "ids",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "flipH",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "flipV",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "image",
    "memberof": "src/fzp/view.js~FZPView",
    "static": false,
    "longname": "src/fzp/view.js~FZPView#image",
    "access": "public",
    "description": "The FZPView image",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "layerIds",
    "memberof": "src/fzp/view.js~FZPView",
    "static": false,
    "longname": "src/fzp/view.js~FZPView#layerIds",
    "access": "public",
    "description": "The FZPView layer id's",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "flipHorizontal",
    "memberof": "src/fzp/view.js~FZPView",
    "static": false,
    "longname": "src/fzp/view.js~FZPView#flipHorizontal",
    "access": "public",
    "description": "FZPView flip horizontal",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "flipVertical",
    "memberof": "src/fzp/view.js~FZPView",
    "static": false,
    "longname": "src/fzp/view.js~FZPView#flipVertical",
    "access": "public",
    "description": "FZPView flip vertical",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "svg",
    "memberof": "src/fzp/view.js~FZPView",
    "static": false,
    "longname": "src/fzp/view.js~FZPView#svg",
    "access": "public",
    "description": "The FZPView svg data",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "setImage",
    "memberof": "src/fzp/view.js~FZPView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/view.js~FZPView#setImage",
    "access": "public",
    "description": "Set the FZPView image source",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "The image source"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZPView"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "totalLayerId",
    "memberof": "src/fzp/view.js~FZPView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/view.js~FZPView#totalLayerId",
    "access": "public",
    "description": "Get the total number of FZPView layer id's",
    "lineNumber": 62,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "setLayerId",
    "memberof": "src/fzp/view.js~FZPView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/view.js~FZPView#setLayerId",
    "access": "public",
    "description": "Add a layer id to the FZPView",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The layer name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZPView"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "existLayerId",
    "memberof": "src/fzp/view.js~FZPView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/view.js~FZPView#existLayerId",
    "access": "public",
    "description": "Check if a layer id exist at the FZPView layerIds array",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "setSVG",
    "memberof": "src/fzp/view.js~FZPView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/view.js~FZPView#setSVG",
    "access": "public",
    "description": "Set the svg data",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The SVG data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZPView"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "loadSVG",
    "memberof": "src/fzp/view.js~FZPView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fzp/view.js~FZPView#loadSVG",
    "access": "public",
    "description": "load the svg of the image path from the fritzing-parts api",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "baseurl",
        "description": "the url to the fritzing-parts/core directory"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/index.js",
    "content": "const FZP = require('./fzp/fzp');\nconst FZPBus = require('./fzp/bus');\nconst connector = require('./fzp/connector');\nconst FZPView = require('./fzp/view');\nconst FZPUtils = require('./utils');\n\nmodule.exports = {\n  FZP: FZP,\n  FZPBus: FZPBus,\n  FZPConnector: connector.FZPConnector,\n  FZPConnectorView: connector.FZPConnectorView,\n  FZPView: FZPView,\n  FZPUtils: FZPUtils,\n};\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "FZP",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~FZP",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "FZPBus",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~FZPBus",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "connector",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~connector",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "FZPView",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~FZPView",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "FZPUtils",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~FZPUtils",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/utils.js",
    "content": "'use strict';\n\nconst axios = require('axios');\nconst xml2js = require('xml2js');\nconst parseXml = xml2js.parseString;\nconst FZP = require('./fzp/fzp');\nconst FZPConnector = require('./fzp/connector');\nconst FZPConnectorView = require('./fzp/connector-view');\n\n/**\n * Load a FZP file from the given URL.\n * @param {String} url URL to the FZP file.\n * @return {Promise}\n */\nfunction loadFZP(url) {\n  return axios.get(url, {responseType: 'xml'})\n  .then((res) => {\n    return parseFZP(res.data);\n  });\n}\n\n/**\n * parse a fzp xml string\n * @param {String} data\n * @return {Promise}\n */\nfunction parseFZP(data) {\n  return new Promise(function(resolve, reject) {\n    let fzp = new FZP();\n    if (data) {\n      parseXml(data, (err, xml) => {\n        if (err) {\n          return reject(err);\n        }\n\n        fzp.moduleId = xml.module.$.moduleId;\n        fzp.fritzingVersion = xml.module.$.fritzingVersion;\n        if (xml.module.version) fzp.version = xml.module.version[0];\n        if (xml.module.title) fzp.title = xml.module.title[0];\n        if (xml.module.description) fzp.description = xml.module.description[0];\n        if (xml.module.author) fzp.author = xml.module.author[0];\n        if (xml.module.date) fzp.date = xml.module.date[0];\n        if (xml.module.url) fzp.url = xml.module.url[0];\n        if (xml.module.label) fzp.label = xml.module.label[0];\n        if (xml.module.tags) fzp.tags = xml.module.tags[0].tag;\n        if (xml.module.taxonomy) fzp.taxonomy = xml.module.taxonomy;\n        if (xml.module.language) fzp.language = xml.module.language;\n        if (xml.module.family) fzp.family = xml.module.family;\n        if (xml.module.variant) fzp.variant = xml.module.variant;\n        if (xml.module.properties) {\n          fzp.properties = parseProperties(xml.module.properties[0].property);\n        }\n\n        if (xml.module.views) {\n          if (xml.module.views[0].iconView) {\n            const iconViewLayer = xml.module.views[0].iconView[0].layers[0];\n            fzp.views.icon.setImage(iconViewLayer.$.image);\n            fzp.views.icon.setLayerId(iconViewLayer.layer[0].$.layerId);\n          }\n          if (xml.module.views[0].breadboardView) {\n            const breadboardLayer = xml.module.views[0].breadboardView[0].layers[0];\n            fzp.views.breadboard.setImage(breadboardLayer.$.image);\n            fzp.views.breadboard.setLayerId(breadboardLayer.layer[0].$.layerId);\n          }\n          if (xml.module.views[0].pcbView) {\n            const pcbViewLayer = xml.module.views[0].pcbView[0].layers[0];\n            fzp.views.pcb.setImage(pcbViewLayer.$.image);\n            for (let iLayer = 0; iLayer < pcbViewLayer.layer.length; iLayer++) {\n              fzp.views.pcb.setLayerId(pcbViewLayer.layer[iLayer].$.layerId);\n            }\n          }\n          if (xml.module.views[0].schematicView) {\n            const schematicViewLayer = xml.module.views[0].schematicView[0].layers[0];\n            fzp.views.schematic.setImage(schematicViewLayer.$.image);\n            fzp.views.schematic.setLayerId(schematicViewLayer.layer[0].$.layerId);\n          }\n        }\n\n        if (xml.module.connectors) {\n          if (xml.module.connectors[0].connector) {\n            for (let i = 0; i < xml.module.connectors[0].connector.length; i++) {\n              const connector = xml.module.connectors[0].connector[i];\n\n              // create the connector for the three views.\n              let c = new FZPConnector();\n              c.id = connector.$.id;\n              c.name = connector.$.name;\n              c.type = connector.$.type;\n              if (connector.description) {\n                c.description = connector.description[0];\n              }\n\n              if (connector.views[0].breadboardView) {\n                c.views.breadboard = parseConnectorView(connector.views[0].breadboardView[0].p[0]);\n              }\n\n              if (connector.views[0].schematicView) {\n                c.views.schematic = parseConnectorView(connector.views[0].schematicView[0].p[0]);\n              }\n\n              if (connector.views[0].pcbView) {\n                for (let iPcb = 0; iPcb < connector.views[0].pcbView[0].p.length; iPcb++) {\n                  switch (connector.views[0].pcbView[0].p[iPcb].$.layer) {\n                    case 'copper0':\n                    c.views.pcb.copper0 = parseConnectorView(connector.views[0].pcbView[0].p[iPcb]);\n                    break;\n                    case 'copper1':\n                    c.views.pcb.copper1 = parseConnectorView(connector.views[0].pcbView[0].p[iPcb]);\n                    break;\n                  }\n                }\n              }\n\n              fzp.connectors[c.id] = c;\n            }\n          }\n        }\n\n        return resolve(fzp);\n      });\n    }\n  });\n}\n\n/**\n * Get the parsed xml object and map to a proper structure\n * @param {String} xml\n * @return {Object}\n */\nfunction parseProperties(xml) {\n  let data = {};\n  for (let i = 0; i < xml.length; i++) {\n    data[xml[i].$.name] = {\n      value: xml[i]._,\n      showInLabel: xml[i].$.showInLabel,\n    };\n  }\n  return data;\n}\n\n/**\n * @param {Object} xml\n * @return {FZPConnectorView}\n */\nfunction parseConnectorView(xml) {\n  let conView = new FZPConnectorView();\n  conView.layer = xml.$.layer || null;\n  conView.svgId = xml.$.svgId || null;\n  conView.legId = xml.$.legId || null;\n  conView.terminalId = xml.$.terminalId || null;\n  return conView;\n}\n\n/**\n * Create a xml string of a FZP instance.\n * @param {FZP} fzp\n * @return {String}\n */\nfunction marshalToXML(fzp) {\n  let builder = new xml2js.Builder();\n  let data = {\n    module: Object.assign({}, fzp),\n  };\n  data.module.$ = {\n    moduleId: fzp.moduleId,\n    fritzingVersion: fzp.fritzingVersion,\n  };\n  delete data.moduleId;\n  delete data.fritzingVersion;\n\n  if (data.module) {\n    if (data.module.views) {\n      if (data.module.icon) {\n        delete data.module.views.icon.svg;\n      }\n      if (data.module.breadboard) {\n        delete data.module.views.breadboard.svg;\n      }\n      if (data.module.schematic) {\n        delete data.module.views.schematic.svg;\n      }\n      if (data.module.pcb) {\n        delete data.module.views.pcb.svg;\n      }\n    }\n  }\n  return builder.buildObject(data);\n}\n\nmodule.exports = {\n  loadFZP,\n  parseFZP,\n  parseProperties,\n  marshalToXML,\n};\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/src/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "axios",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~axios",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "xml2js",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~xml2js",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "parseXml",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~parseXml",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "FZP",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~FZP",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "FZPConnector",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~FZPConnector",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "FZPConnectorView",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~FZPConnectorView",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "loadFZP",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~loadFZP",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": "Load a FZP file from the given URL.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "URL to the FZP file."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "parseFZP",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~parseFZP",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": "parse a fzp xml string",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "parseProperties",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~parseProperties",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": "Get the parsed xml object and map to a proper structure",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "xml",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "parseConnectorView",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~parseConnectorView",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "xml",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FZPConnectorView"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "marshalToXML",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~marshalToXML",
    "access": "public",
    "export": false,
    "importPath": "fzp-js/src/utils.js",
    "importStyle": null,
    "description": "Create a xml string of a FZP instance.",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "FZP"
        ],
        "spread": false,
        "optional": false,
        "name": "fzp",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "# fzp-js [![](https://paulvollmer.net/fzp-js/badge.svg)](https://paulvollmer.net/fzp-js/)\n\nfritzing fzp javascript library\n\n## Development\n```sh\nyarn install\nmake test\n```\n\nand lint your files before you commit\n```sh\nmake lint\n```\n\nto build an es5 compatible version run\n```sh\nmake build\n```\n\n## Usage\n\n```javascript\nconst {FZPUtils} = require('fzp-js')\n\nconst url = 'https://fritzing.github.io/fritzing-parts/core/LED-generic-3mm.fzp'\nFZPUtils.loadFZP(url).then((fzp) => {\n  console.log('FZP', fzp);\n\n  // load the svg of the breadboard view\n  fzp.views.breadboard.loadSVG('foo').then((d) => {\n    console.log('SVG', d);\n  }).catch((err) => {\n    throw new Error(err)\n  })\n\n}).catch((e) => {\n  throw new Error(err)\n})\n```\n\n## License\n[MIT-LICENSE](LICENSE)\n",
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"fzp-js\",\n  \"version\": \"0.1.1\",\n  \"description\": \"fritzing fzp javascript library\",\n  \"author\": \"Paul Vollmer\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"fritzing\",\n    \"fzp\"\n  ],\n  \"homepage\": \"https://github.com/paulvollmer/fzp-js#readme\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/paulvollmer/fzp-js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/paulvollmer/fzp-js/issues\"\n  },\n  \"main\": \"lib/index.js\",\n  \"scripts\": {\n    \"pretest\": \"make lint\",\n    \"test\": \"make test\",\n    \"precommit\": \"make lint\",\n    \"prepush\": \"make lint\"\n  },\n  \"jest\": {\n    \"verbose\": true,\n    \"collectCoverage\": true,\n    \"coverageReporters\": [\n      \"text\",\n      \"lcov\"\n    ]\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-plugin-add-header-comment\": \"^1.0.3\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.18.0\",\n    \"eslint-config-google\": \"^0.9.1\",\n    \"fritzing-js\": \"github:fritzing/fritzing-js\",\n    \"husky\": \"^0.14.3\",\n    \"jest\": \"^22.0.6\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.18.0\",\n    \"xml2js\": \"^0.4.19\"\n  }\n}\n",
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 144,
    "kind": "testFile",
    "name": "test/_fritzing-parts-test.js",
    "content": "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst {parseFZP} = require('../src/utils');\n\nlet fzpDir = fs.readdirSync(path.join(__dirname, './fixtures/fritzing-parts/core'));\n\n// for (var i = 0; i < fzpDir.length; i++) {\n//   if (path.extname(fzpDir[i]) === \".fzp\") {\n//\n//     const data = fs.readFileSync('./test/fixtures/LED-generic-3mm.fzp');\n//     parseFZP(data)\n//     .then((fzp) => {\n//       console.log('==> OK   ', fzpDir[i]);\n//     })\n//     .catch(e => {\n//       console.error('==> ERROR',fzpDir[i])\n//       console.error(e);\n//     })\n//     console.log(path.extname(fzpDir[i]));\n//   }\n// }\n\neachPromise(fzpDir, (name, next) => {\n  if (path.extname(name) === '.fzp') {\n    const data = fs.readFileSync(path.join(__dirname, './fixtures/fritzing-parts/core', name));\n    parseFZP(data)\n    .then((fzp) => {\n      // console.log('==> OK   ', name);\n      next();\n    })\n    .catch((e) => {\n      console.error('\\n==> ERROR', name);\n      console.error(e);\n      next();\n    });\n  }\n}, () => {\n  console.log('==> done');\n});\n\nfunction eachPromise(items, task, cb) {\n  let idx = 0;\n  let len = items.length;\n  iter();\n  function iter() {\n    task(items[idx++], function() {\n idx >= len ? cb() : iter();\n});\n  }\n};\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/test/_fritzing-parts-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "testFile",
    "name": "test/fzp.connector-view.test.js",
    "content": "'use strict';\n\nconst FZPConnectorView = require('../src/fzp/connector-view');\n\ntest('Test new FZPConnectorView (empty)', () => {\n  let c = new FZPConnectorView();\n  expect(c.layer).toEqual(null);\n  expect(c.svgId).toEqual(null);\n  expect(c.legId).toEqual(null);\n  expect(c.terminalId).toEqual(null);\n});\n\ntest('Test new FZPConnectorView', () => {\n  const opt = {\n    layer: 'lay1',\n    svgId: 'svg1',\n    legId: 'leg1',\n    terminalId: 'ter1',\n  };\n  let c = new FZPConnectorView(opt);\n  expect(c.layer).toEqual('lay1');\n  expect(c.svgId).toEqual('svg1');\n  expect(c.legId).toEqual('leg1');\n  expect(c.terminalId).toEqual('ter1');\n});\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/test/fzp.connector-view.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "test",
    "name": "test0",
    "testId": 0,
    "memberof": "test/fzp.connector-view.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.connector-view.test.js~test0",
    "access": null,
    "description": "Test new FZPConnectorView (empty)",
    "lineNumber": 5
  },
  {
    "__docId__": 147,
    "kind": "test",
    "name": "test1",
    "testId": 1,
    "memberof": "test/fzp.connector-view.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.connector-view.test.js~test1",
    "access": null,
    "description": "Test new FZPConnectorView",
    "lineNumber": 13
  },
  {
    "__docId__": 148,
    "kind": "testFile",
    "name": "test/fzp.connector.test.js",
    "content": "'use strict';\n\nconst FZPConnector = require('../src/fzp/connector');\n\ntest('Test new FZPConnector (empty)', () => {\n  let c = new FZPConnector();\n  expect(c.id).toEqual(null);\n  expect(c.name).toEqual(null);\n  expect(c.type).toEqual(null);\n  expect(c.description).toEqual(null);\n});\n\ntest('Test new FZPConnector', () => {\n  const opt = {\n    id: 't1',\n    name: 'test',\n    type: 'testtype',\n    description: 'test connector',\n    views: {\n      breadboard: {\n        layer: 'b-layer',\n      },\n      schematic: {\n        layer: 's-layer',\n      },\n      pcb: {\n        copper0: {\n          layer: 'copper0',\n        },\n        copper1: {\n          layer: 'copper1',\n        },\n\n      },\n    },\n  };\n  let c = new FZPConnector(opt);\n  expect(c.id).toEqual('t1');\n  expect(c.name).toEqual('test');\n  expect(c.type).toEqual('testtype');\n  expect(c.description).toEqual('test connector');\n  expect(c.views.breadboard.layer).toEqual('b-layer');\n  expect(c.views.schematic.layer).toEqual('s-layer');\n  expect(c.views.pcb.copper0.layer).toEqual('copper0');\n  expect(c.views.pcb.copper1.layer).toEqual('copper1');\n});\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/test/fzp.connector.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "test",
    "name": "test2",
    "testId": 2,
    "memberof": "test/fzp.connector.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.connector.test.js~test2",
    "access": null,
    "description": "Test new FZPConnector (empty)",
    "lineNumber": 5
  },
  {
    "__docId__": 150,
    "kind": "test",
    "name": "test3",
    "testId": 3,
    "memberof": "test/fzp.connector.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.connector.test.js~test3",
    "access": null,
    "description": "Test new FZPConnector",
    "lineNumber": 13
  },
  {
    "__docId__": 151,
    "kind": "testFile",
    "name": "test/fzp.fzp.test.js",
    "content": "'use strict';\n\nconst FZP = require('../src/fzp/fzp');\n\ntest('Test new FZP (empty)', () => {\n  let fzp = new FZP();\n  expect(fzp.version).toEqual('0.0.0');\n});\n\ntest('Test new FZP (version)', () => {\n  let fzp = new FZP({version: 'test'});\n  expect(fzp.version).toEqual('test');\n});\n\ntest('Test FZP setTag, totalTags', () => {\n  let fzp = new FZP();\n  fzp.setTag('test-tag-1');\n  fzp.setTag('test-tag-2');\n  expect(fzp.totalTags()).toEqual(2);\n  expect(fzp.tags).toEqual(['test-tag-1', 'test-tag-2']);\n});\n\ntest('Test FZP setProperty, getProperty', () => {\n  let fzp = new FZP();\n  fzp.setProperty('test-prop-1', 123, true);\n  expect(fzp.properties).toEqual({\n    'test-prop-1': {value: 123, showInLabel: true},\n  });\n  expect(fzp.getProperty('test-prop-1').value).toEqual(123);\n  expect(fzp.getProperty('test-prop-1').showInLabel).toEqual(true);\n});\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/test/fzp.fzp.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "test",
    "name": "test4",
    "testId": 4,
    "memberof": "test/fzp.fzp.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.fzp.test.js~test4",
    "access": null,
    "description": "Test new FZP (empty)",
    "lineNumber": 5
  },
  {
    "__docId__": 153,
    "kind": "test",
    "name": "test5",
    "testId": 5,
    "memberof": "test/fzp.fzp.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.fzp.test.js~test5",
    "access": null,
    "description": "Test new FZP (version)",
    "lineNumber": 10
  },
  {
    "__docId__": 154,
    "kind": "test",
    "name": "test6",
    "testId": 6,
    "memberof": "test/fzp.fzp.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.fzp.test.js~test6",
    "access": null,
    "description": "Test FZP setTag, totalTags",
    "lineNumber": 15
  },
  {
    "__docId__": 155,
    "kind": "test",
    "name": "test7",
    "testId": 7,
    "memberof": "test/fzp.fzp.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.fzp.test.js~test7",
    "access": null,
    "description": "Test FZP setProperty, getProperty",
    "lineNumber": 23
  },
  {
    "__docId__": 156,
    "kind": "testFile",
    "name": "test/fzp.property.test.js",
    "content": "'use strict';\n\nconst FZPProperty = require('../src/fzp/property');\n\ntest('Test new FZPProperty (empty)', () => {\n  let c = new FZPProperty();\n  expect(c.value).toEqual(null);\n  expect(c.showInLabel).toEqual(false);\n});\n\ntest('Test new FZPProperty', () => {\n  let c = new FZPProperty('lay1', true);\n  expect(c.value).toEqual('lay1');\n  expect(c.showInLabel).toEqual(true);\n});\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/test/fzp.property.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "test",
    "name": "test8",
    "testId": 8,
    "memberof": "test/fzp.property.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.property.test.js~test8",
    "access": null,
    "description": "Test new FZPProperty (empty)",
    "lineNumber": 5
  },
  {
    "__docId__": 158,
    "kind": "test",
    "name": "test9",
    "testId": 9,
    "memberof": "test/fzp.property.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.property.test.js~test9",
    "access": null,
    "description": "Test new FZPProperty",
    "lineNumber": 11
  },
  {
    "__docId__": 159,
    "kind": "testFile",
    "name": "test/fzp.view.test.js",
    "content": "'use strict';\n\nconst FZPView = require('../src/fzp/view');\n\ntest('Test new FZPView (empty)', () => {\n  let fzp = new FZPView();\n  expect(fzp.image).toEqual(null);\n  expect(fzp.layerIds).toEqual([]);\n  expect(fzp.flipHorizontal).toEqual(false);\n  expect(fzp.flipVertical).toEqual(false);\n  expect(fzp.svg).toEqual(null);\n});\n\ntest('Test new FZPView (image name)', () => {\n  let fzp = new FZPView('test');\n  expect(fzp.image).toEqual('test');\n  expect(fzp.layerIds).toEqual([]);\n  expect(fzp.flipHorizontal).toEqual(false);\n  expect(fzp.flipVertical).toEqual(false);\n  expect(fzp.svg).toEqual(null);\n});\n\ntest('Test new FZPView', () => {\n  let fzp = new FZPView('test', ['breadboard'], true, true);\n  expect(fzp.image).toEqual('test');\n  expect(fzp.layerIds).toEqual(['breadboard']);\n  expect(fzp.flipHorizontal).toEqual(true);\n  expect(fzp.flipVertical).toEqual(true);\n  fzp.setLayerId('foo');\n  expect(fzp.layerIds).toEqual(['breadboard', 'foo']);\n  expect(fzp.existLayerId('foo')).toEqual(true);\n  expect(fzp.flipHorizontal).toEqual(true);\n  expect(fzp.flipVertical).toEqual(true);\n  fzp.setLayerId('foo');\n  expect(fzp.totalLayerId()).toEqual(2);\n  fzp.setSVG('hello-svg');\n  expect(fzp.svg).toEqual('hello-svg');\n});\n\ntest('Test new FZPView loadSVG', (done) => {\n  let fzp = new FZPView('LED-3mm-red-leg.svg');\n  expect(fzp.image).toEqual('LED-3mm-red-leg.svg');\n  const baseurl = 'https://fritzing.github.io/fritzing-parts/svg/core/breadboard/';\n  fzp.loadSVG(baseurl).then((d) => {\n    expect(d).not.toEqual('');\n\n    // check the first and the last line\n    let lines = d.split('\\n');\n    expect(lines[0]).toEqual('<?xml version=\"1.0\" encoding=\"utf-8\"?>');\n    expect(lines[lines.length-2]).toEqual('</svg>');\n\n    done();\n  })\n  .catch((e) => {\n    console.error('ERROR', e);\n    done(e);\n  });\n});\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/test/fzp.view.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "test",
    "name": "test10",
    "testId": 10,
    "memberof": "test/fzp.view.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.view.test.js~test10",
    "access": null,
    "description": "Test new FZPView (empty)",
    "lineNumber": 5
  },
  {
    "__docId__": 161,
    "kind": "test",
    "name": "test11",
    "testId": 11,
    "memberof": "test/fzp.view.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.view.test.js~test11",
    "access": null,
    "description": "Test new FZPView (image name)",
    "lineNumber": 14
  },
  {
    "__docId__": 162,
    "kind": "test",
    "name": "test12",
    "testId": 12,
    "memberof": "test/fzp.view.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.view.test.js~test12",
    "access": null,
    "description": "Test new FZPView",
    "lineNumber": 23
  },
  {
    "__docId__": 163,
    "kind": "test",
    "name": "test13",
    "testId": 13,
    "memberof": "test/fzp.view.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/fzp.view.test.js~test13",
    "access": null,
    "description": "Test new FZPView loadSVG",
    "lineNumber": 40
  },
  {
    "__docId__": 164,
    "kind": "testFile",
    "name": "test/utils.test.js",
    "content": "'use strict';\n\nconst {parseFZP, loadFZP, marshalToXML} = require('../src/utils');\nconst FZP = require('../src/fzp/fzp');\nconst fs = require('fs');\n\nconst FritzingAPI = 'https://fritzing.github.io/fritzing-parts';\nconst FritzingAPISVGCore = FritzingAPI+'/svg/core/';\n\ntest('Test parseFZP', (done) => {\n  const data = fs.readFileSync('./test/fixtures/LED-generic-3mm.fzp');\n  parseFZP(data)\n  .then((fzp) => {\n    expect(fzp.moduleId).toEqual('3mmColorLEDModuleID');\n    expect(fzp.fritzingVersion).toEqual('0.1.beta.1396');\n    expect(fzp.version).toEqual('4');\n    expect(fzp.author).toEqual('Stefan Hermann');\n    expect(fzp.title).toEqual('Red LED - 3mm');\n    expect(fzp.label).toEqual('LED');\n    expect(fzp.date).toEqual('2008-10-10');\n    expect(fzp.tags).toEqual(['LED', 'Red LED', 'indicator', 'fritzing core']);\n    expect(fzp.description).toEqual('A generic red LED (~1.8V)');\n    expect(fzp.url).toEqual('');\n    expect(fzp.taxonomy).toEqual('');\n    expect(fzp.language).toEqual('');\n    expect(fzp.family).toEqual('');\n    expect(fzp.variant).toEqual('');\n\n    expect(fzp.properties).toEqual({\n      package: {value: '3 mm [THT]'},\n      family: {value: 'LED'},\n      color: {value: 'Red (633nm)', showInLabel: 'yes'},\n      current: {showInLabel: 'yes'},\n      leg: {value: 'yes'},\n    });\n\n    // testing the views\n    expect(fzp.views.icon.image).toEqual('icon/LED-red-5mmicon.svg');\n    expect(fzp.views.icon.layerIds).toEqual(['icon']);\n\n    expect(fzp.views.breadboard.image).toEqual('breadboard/LED-3mm-red-leg.svg');\n    expect(fzp.views.breadboard.layerIds).toEqual(['breadboard']);\n\n    expect(fzp.views.pcb.image).toEqual('pcb/3mm_LED.svg');\n    expect(fzp.views.pcb.layerIds).toEqual(['copper0', 'copper1', 'keepout', 'outline', 'silkscreen', 'soldermask']);\n\n    expect(fzp.views.schematic.image).toEqual('schematic/led.svg');\n    expect(fzp.views.schematic.layerIds).toEqual(['schematic']);\n\n    // testing the connertor\n    expect(fzp.connectors['connector0'].name).toEqual('cathode');\n    expect(fzp.connectors['connector0'].type).toEqual('male');\n    expect(fzp.connectors['connector0'].description).toEqual('cathode pin');\n\n    // console.log('-------------', fzp.connectors['connector0'].views.breadboard);\n    expect(fzp.connectors['connector0'].views.breadboard.layer).toEqual('breadboard');\n    expect(fzp.connectors['connector0'].views.breadboard.svgId).toEqual('connector0pin');\n    expect(fzp.connectors['connector0'].views.breadboard.legId).toEqual('connector0leg');\n\n    expect(fzp.connectors['connector0'].views.schematic.layer).toEqual('schematic');\n    expect(fzp.connectors['connector0'].views.schematic.svgId).toEqual('connector0pin');\n    expect(fzp.connectors['connector0'].views.schematic.terminalId).toEqual('connector0terminal');\n\n    expect(fzp.connectors['connector0'].views.pcb.copper0.layer).toEqual('copper0');\n    expect(fzp.connectors['connector0'].views.pcb.copper0.svgId).toEqual('connector0pad');\n    expect(fzp.connectors['connector0'].views.pcb.copper1.layer).toEqual('copper1');\n    expect(fzp.connectors['connector0'].views.pcb.copper1.svgId).toEqual('connector0pad');\n\n    done();\n  })\n  .catch((err) => {\n    done(err);\n  });\n});\n\ntest('Test loadFZP and loadSVG', (done) => {\n  loadFZP(FritzingAPI+'/core/LED-generic-3mm.fzp')\n  .then((fzp) => {\n    // load the svg of the breadboard view\n    fzp.views.breadboard.loadSVG(FritzingAPISVGCore)\n    .then((d) => {\n        done();\n    })\n    .catch((err) => {\n      done(err);\n    });\n  })\n  .catch((e) => {\n    done(e);\n  });\n});\n\ntest('Test loadFZP all SVGs', (done) => {\n  loadFZP(FritzingAPI+'/core/LED-generic-3mm.fzp')\n  .then((fzp) => {\n    fzp.loadSVGs(FritzingAPISVGCore)\n    .then((d) => {\n      // check if the svg string is not empty\n      expect(fzp.views.breadboard.svg).not.toBe('');\n      expect(fzp.views.pcb.svg).not.toBe('');\n      expect(fzp.views.schematic.svg).not.toBe('');\n      done();\n    })\n    .catch((err) => {\n      done(err);\n    });\n  })\n  .catch((e) => {\n    done(e);\n  });\n});\n\ntest('Test marshalToXML', (done) => {\n  let fzp = new FZP();\n  fzp.moduleId = 'test-moduleId';\n  fzp.fritzingVersion = 'test-fritzingVersion';\n  fzp.version = 'test-version';\n  fzp.title = 'test-title';\n  fzp.description = 'test-description';\n  fzp.author = 'test-author';\n  fzp.date = 'test-date';\n  fzp.url = 'test-url';\n  fzp.label = 'test-label';\n  fzp.taxonomy = 'test-taxonomy';\n  fzp.language = 'test-language';\n  fzp.family = 'test-family';\n  fzp.variant = 'test-variant';\n  fzp.properties = 'test-properties';\n  fzp.views.icon.image = 'test-views-icon-image';\n  fzp.views.breadboard.image = 'test-views-breadboard-image';\n  fzp.views.schematic.image = 'test-views-schematic-image';\n  fzp.views.pcb.image = 'test-views-pcb-image';\n  let xml = marshalToXML(fzp);\n\n  // check if the generated xml is not empty\n  expect(xml).not.toEqual('');\n  // console.log(xml);\n\n  // TODO: call 'parseFZP'\n  // TODO: check if data is equal to the fzp from above\n  done();\n});\n\ntest('Test marshalToXML from loaded part', (done) => {\n  loadFZP(FritzingAPI+'/core/LED-generic-3mm.fzp')\n  .then((fzp) => {\n    let xml = marshalToXML(fzp);\n    expect(xml).not.toEqual('');\n    // console.log(xml);\n    done();\n  })\n  .catch((e) => {\n    done(e);\n  });\n});\n",
    "static": true,
    "longname": "/Users/paul/code/src/github.com/fritzing/fzp-js/test/utils.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "test",
    "name": "test14",
    "testId": 14,
    "memberof": "test/utils.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils.test.js~test14",
    "access": null,
    "description": "Test parseFZP",
    "lineNumber": 10
  },
  {
    "__docId__": 166,
    "kind": "test",
    "name": "test15",
    "testId": 15,
    "memberof": "test/utils.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils.test.js~test15",
    "access": null,
    "description": "Test loadFZP and loadSVG",
    "lineNumber": 76
  },
  {
    "__docId__": 167,
    "kind": "test",
    "name": "test16",
    "testId": 16,
    "memberof": "test/utils.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils.test.js~test16",
    "access": null,
    "description": "Test loadFZP all SVGs",
    "lineNumber": 93
  },
  {
    "__docId__": 168,
    "kind": "test",
    "name": "test17",
    "testId": 17,
    "memberof": "test/utils.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils.test.js~test17",
    "access": null,
    "description": "Test marshalToXML",
    "lineNumber": 113
  },
  {
    "__docId__": 169,
    "kind": "test",
    "name": "test18",
    "testId": 18,
    "memberof": "test/utils.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils.test.js~test18",
    "access": null,
    "description": "Test marshalToXML from loaded part",
    "lineNumber": 144
  }
]